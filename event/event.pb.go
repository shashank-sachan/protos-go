// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: event/event.proto

package event

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Topic int32

const (
	Topic_USER    Topic = 0
	Topic_CONTENT Topic = 1
	Topic_PAGE    Topic = 2
	Topic_GAME    Topic = 3
	Topic_VOD     Topic = 4
	Topic_LIVE    Topic = 5
	Topic_DEBUG   Topic = 6
	Topic_PUSH    Topic = 7
	Topic_SSE     Topic = 8
)

// Enum value maps for Topic.
var (
	Topic_name = map[int32]string{
		0: "USER",
		1: "CONTENT",
		2: "PAGE",
		3: "GAME",
		4: "VOD",
		5: "LIVE",
		6: "DEBUG",
		7: "PUSH",
		8: "SSE",
	}
	Topic_value = map[string]int32{
		"USER":    0,
		"CONTENT": 1,
		"PAGE":    2,
		"GAME":    3,
		"VOD":     4,
		"LIVE":    5,
		"DEBUG":   6,
		"PUSH":    7,
		"SSE":     8,
	}
)

func (x Topic) Enum() *Topic {
	p := new(Topic)
	*p = x
	return p
}

func (x Topic) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Topic) Descriptor() protoreflect.EnumDescriptor {
	return file_event_event_proto_enumTypes[0].Descriptor()
}

func (Topic) Type() protoreflect.EnumType {
	return &file_event_event_proto_enumTypes[0]
}

func (x Topic) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Topic.Descriptor instead.
func (Topic) EnumDescriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{0}
}

type NotificationType int32

const (
	NotificationType_USER_SUBSCRIPTION_COMPLETED NotificationType = 0
	NotificationType_USER_SUBSCRIPTION_FAILED    NotificationType = 1
	NotificationType_USER_DEVICE_ADDED           NotificationType = 2
	NotificationType_USER_DEVICE_REMOVED         NotificationType = 3
	NotificationType_USER_DEVICE_LIMIT_REACHED   NotificationType = 5
	NotificationType_USER_STREAM_LIMIT_REACHED   NotificationType = 6
	NotificationType_USER_TV_CONNECT_WITH_MOBILE NotificationType = 25
	NotificationType_USER_SSE_CONNECT            NotificationType = 26
	NotificationType_PAGE_REFRESH                NotificationType = 7
	NotificationType_DEBUG_ENTITLEMENT           NotificationType = 8
	NotificationType_DEBUG_DEVICE                NotificationType = 9
	NotificationType_VOD_ENCODING_COMPLETED      NotificationType = 10
	NotificationType_VOD_ENCODING_FAILED         NotificationType = 11
	NotificationType_LIVE_CREATE_COMPLETED       NotificationType = 12
	NotificationType_LIVE_CREATE_FAILED          NotificationType = 13
	NotificationType_LIVE_CDN_READY              NotificationType = 14
	NotificationType_CONTENT_CREATE              NotificationType = 15
	NotificationType_CONTENT_PUBLISH             NotificationType = 16
	NotificationType_CONTENT_UNPUBLISH           NotificationType = 17
	NotificationType_CONTENT_UPDATE              NotificationType = 18
	NotificationType_CONTENT_ARCHIVE             NotificationType = 19
	NotificationType_CONTENT_DELETE              NotificationType = 20
	NotificationType_CONTENT_SCHEDULE_ADDED      NotificationType = 21
	NotificationType_CONTENT_SCHEDULE_REMOVED    NotificationType = 22
	NotificationType_SPORTS_RADAR_LIVE_SCORE     NotificationType = 23
	NotificationType_SPORTS_RADAR_INSIGHT        NotificationType = 24
	NotificationType_PUSH_MOBILE                 NotificationType = 27
	NotificationType_PUSH_EMAIL                  NotificationType = 28
	NotificationType_PUSH_OTP                    NotificationType = 29
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0:  "USER_SUBSCRIPTION_COMPLETED",
		1:  "USER_SUBSCRIPTION_FAILED",
		2:  "USER_DEVICE_ADDED",
		3:  "USER_DEVICE_REMOVED",
		5:  "USER_DEVICE_LIMIT_REACHED",
		6:  "USER_STREAM_LIMIT_REACHED",
		25: "USER_TV_CONNECT_WITH_MOBILE",
		26: "USER_SSE_CONNECT",
		7:  "PAGE_REFRESH",
		8:  "DEBUG_ENTITLEMENT",
		9:  "DEBUG_DEVICE",
		10: "VOD_ENCODING_COMPLETED",
		11: "VOD_ENCODING_FAILED",
		12: "LIVE_CREATE_COMPLETED",
		13: "LIVE_CREATE_FAILED",
		14: "LIVE_CDN_READY",
		15: "CONTENT_CREATE",
		16: "CONTENT_PUBLISH",
		17: "CONTENT_UNPUBLISH",
		18: "CONTENT_UPDATE",
		19: "CONTENT_ARCHIVE",
		20: "CONTENT_DELETE",
		21: "CONTENT_SCHEDULE_ADDED",
		22: "CONTENT_SCHEDULE_REMOVED",
		23: "SPORTS_RADAR_LIVE_SCORE",
		24: "SPORTS_RADAR_INSIGHT",
		27: "PUSH_MOBILE",
		28: "PUSH_EMAIL",
		29: "PUSH_OTP",
	}
	NotificationType_value = map[string]int32{
		"USER_SUBSCRIPTION_COMPLETED": 0,
		"USER_SUBSCRIPTION_FAILED":    1,
		"USER_DEVICE_ADDED":           2,
		"USER_DEVICE_REMOVED":         3,
		"USER_DEVICE_LIMIT_REACHED":   5,
		"USER_STREAM_LIMIT_REACHED":   6,
		"USER_TV_CONNECT_WITH_MOBILE": 25,
		"USER_SSE_CONNECT":            26,
		"PAGE_REFRESH":                7,
		"DEBUG_ENTITLEMENT":           8,
		"DEBUG_DEVICE":                9,
		"VOD_ENCODING_COMPLETED":      10,
		"VOD_ENCODING_FAILED":         11,
		"LIVE_CREATE_COMPLETED":       12,
		"LIVE_CREATE_FAILED":          13,
		"LIVE_CDN_READY":              14,
		"CONTENT_CREATE":              15,
		"CONTENT_PUBLISH":             16,
		"CONTENT_UNPUBLISH":           17,
		"CONTENT_UPDATE":              18,
		"CONTENT_ARCHIVE":             19,
		"CONTENT_DELETE":              20,
		"CONTENT_SCHEDULE_ADDED":      21,
		"CONTENT_SCHEDULE_REMOVED":    22,
		"SPORTS_RADAR_LIVE_SCORE":     23,
		"SPORTS_RADAR_INSIGHT":        24,
		"PUSH_MOBILE":                 27,
		"PUSH_EMAIL":                  28,
		"PUSH_OTP":                    29,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_event_event_proto_enumTypes[1].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_event_event_proto_enumTypes[1]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{1}
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             NotificationType `protobuf:"varint,1,opt,name=type,proto3,enum=NotificationType" json:"type,omitempty"`
	Site             string           `protobuf:"bytes,2,opt,name=site,proto3" json:"site,omitempty"`
	UserMeta         *UserMeta        `protobuf:"bytes,3,opt,name=userMeta,proto3,oneof" json:"userMeta,omitempty"`
	ContentMeta      *ContentMeta     `protobuf:"bytes,4,opt,name=contentMeta,proto3,oneof" json:"contentMeta,omitempty"`
	Payload          *string          `protobuf:"bytes,5,opt,name=payload,proto3,oneof" json:"payload,omitempty"`
	NotificationType *string          `protobuf:"bytes,6,opt,name=notificationType,proto3,oneof" json:"notificationType,omitempty"` // this is human readable name which can be send to devices by websocket
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_USER_SUBSCRIPTION_COMPLETED
}

func (x *Event) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *Event) GetUserMeta() *UserMeta {
	if x != nil {
		return x.UserMeta
	}
	return nil
}

func (x *Event) GetContentMeta() *ContentMeta {
	if x != nil {
		return x.ContentMeta
	}
	return nil
}

func (x *Event) GetPayload() string {
	if x != nil && x.Payload != nil {
		return *x.Payload
	}
	return ""
}

func (x *Event) GetNotificationType() string {
	if x != nil && x.NotificationType != nil {
		return *x.NotificationType
	}
	return ""
}

type UserMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId string `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
}

func (x *UserMeta) Reset() {
	*x = UserMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMeta) ProtoMessage() {}

func (x *UserMeta) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMeta.ProtoReflect.Descriptor instead.
func (*UserMeta) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{1}
}

func (x *UserMeta) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserMeta) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type ContentMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ContentType string `protobuf:"bytes,2,opt,name=contentType,proto3" json:"contentType,omitempty"`
}

func (x *ContentMeta) Reset() {
	*x = ContentMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContentMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentMeta) ProtoMessage() {}

func (x *ContentMeta) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentMeta.ProtoReflect.Descriptor instead.
func (*ContentMeta) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{2}
}

func (x *ContentMeta) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContentMeta) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{3}
}

func (x *Response) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

var File_event_event_proto protoreflect.FileDescriptor

var file_event_event_proto_rawDesc = []byte{
	0x0a, 0x11, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xb1, 0x02, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x88,
	0x01, 0x01, 0x12, 0x33, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x4d, 0x65, 0x74, 0x61, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x36, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x3f, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x22,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2a, 0x63, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x08, 0x0a, 0x04, 0x55,
	0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04,
	0x47, 0x41, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x56, 0x4f, 0x44, 0x10, 0x04, 0x12,
	0x08, 0x0a, 0x04, 0x4c, 0x49, 0x56, 0x45, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42,
	0x55, 0x47, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x55, 0x53, 0x48, 0x10, 0x07, 0x12, 0x07,
	0x0a, 0x03, 0x53, 0x53, 0x45, 0x10, 0x08, 0x2a, 0xca, 0x05, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a,
	0x18, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x44, 0x44, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54,
	0x5f, 0x52, 0x45, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f,
	0x52, 0x45, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x06, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x54, 0x56, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f, 0x57, 0x49, 0x54,
	0x48, 0x5f, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x45, 0x10, 0x19, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x53, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x1a,
	0x12, 0x10, 0x0a, 0x0c, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x46, 0x52, 0x45, 0x53, 0x48,
	0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45, 0x42, 0x55, 0x47, 0x5f, 0x45, 0x4e, 0x54, 0x49,
	0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x45, 0x42,
	0x55, 0x47, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x10, 0x09, 0x12, 0x1a, 0x0a, 0x16, 0x56,
	0x4f, 0x44, 0x5f, 0x45, 0x4e, 0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x4f, 0x44, 0x5f, 0x45,
	0x4e, 0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x0b,
	0x12, 0x19, 0x0a, 0x15, 0x4c, 0x49, 0x56, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x0c, 0x12, 0x16, 0x0a, 0x12, 0x4c,
	0x49, 0x56, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x0d, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x49, 0x56, 0x45, 0x5f, 0x43, 0x44, 0x4e, 0x5f,
	0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x0e, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4e, 0x54, 0x45,
	0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x0f, 0x12, 0x13, 0x0a, 0x0f, 0x43,
	0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x10,
	0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x50, 0x55,
	0x42, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x11, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4e, 0x54, 0x45,
	0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x43,
	0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x10, 0x13,
	0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x10, 0x14, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f,
	0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x41, 0x44, 0x44, 0x45, 0x44, 0x10, 0x15,
	0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x43, 0x48, 0x45,
	0x44, 0x55, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x16, 0x12, 0x1b,
	0x0a, 0x17, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x53, 0x5f, 0x52, 0x41, 0x44, 0x41, 0x52, 0x5f, 0x4c,
	0x49, 0x56, 0x45, 0x5f, 0x53, 0x43, 0x4f, 0x52, 0x45, 0x10, 0x17, 0x12, 0x18, 0x0a, 0x14, 0x53,
	0x50, 0x4f, 0x52, 0x54, 0x53, 0x5f, 0x52, 0x41, 0x44, 0x41, 0x52, 0x5f, 0x49, 0x4e, 0x53, 0x49,
	0x47, 0x48, 0x54, 0x10, 0x18, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x4d, 0x4f,
	0x42, 0x49, 0x4c, 0x45, 0x10, 0x1b, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x45,
	0x4d, 0x41, 0x49, 0x4c, 0x10, 0x1c, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x4f,
	0x54, 0x50, 0x10, 0x1d, 0x32, 0x52, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a,
	0x09, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x06, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x1a, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x42, 0x08, 0x5a, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_event_proto_rawDescOnce sync.Once
	file_event_event_proto_rawDescData = file_event_event_proto_rawDesc
)

func file_event_event_proto_rawDescGZIP() []byte {
	file_event_event_proto_rawDescOnce.Do(func() {
		file_event_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_event_proto_rawDescData)
	})
	return file_event_event_proto_rawDescData
}

var file_event_event_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_event_event_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_event_event_proto_goTypes = []interface{}{
	(Topic)(0),            // 0: Topic
	(NotificationType)(0), // 1: NotificationType
	(*Event)(nil),         // 2: Event
	(*UserMeta)(nil),      // 3: UserMeta
	(*ContentMeta)(nil),   // 4: ContentMeta
	(*Response)(nil),      // 5: Response
}
var file_event_event_proto_depIdxs = []int32{
	1, // 0: Event.type:type_name -> NotificationType
	3, // 1: Event.userMeta:type_name -> UserMeta
	4, // 2: Event.contentMeta:type_name -> ContentMeta
	2, // 3: EventProcessorService.PushEvent:input_type -> Event
	5, // 4: EventProcessorService.PushEvent:output_type -> Response
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_event_event_proto_init() }
func file_event_event_proto_init() {
	if File_event_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_event_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContentMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_event_event_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_event_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_event_proto_goTypes,
		DependencyIndexes: file_event_event_proto_depIdxs,
		EnumInfos:         file_event_event_proto_enumTypes,
		MessageInfos:      file_event_event_proto_msgTypes,
	}.Build()
	File_event_event_proto = out.File
	file_event_event_proto_rawDesc = nil
	file_event_event_proto_goTypes = nil
	file_event_event_proto_depIdxs = nil
}
